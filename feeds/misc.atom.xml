<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Liuw's Thinkpad</title><link href="http://blog.liuw.name/" rel="alternate"></link><link href="http://blog.liuw.name/feeds/misc.atom.xml" rel="self"></link><id>http://blog.liuw.name/</id><updated>2016-03-06T23:23:00+00:00</updated><entry><title>Rant: Pissed off by Politics</title><link href="http://blog.liuw.name/rant-pissed-off-by-politics.html" rel="alternate"></link><updated>2016-03-06T23:23:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2016-03-06:rant-pissed-off-by-politics.html</id><summary type="html">&lt;p&gt;Many Linux distributions function on the basis that people around the
world subscribe to its ideology. In such model nobody can impose
anything on anybody else. On a large scale this model works well
enough to keep several major distributions function properly and
produce high quality software. But on a smaller scale, things can go
wrong.&lt;/p&gt;
&lt;p&gt;I have been user of one Linux distribution D for many years. I like
way it is organised. I'm quite satisfied with the quality of the
distribution overall.&lt;/p&gt;
&lt;p&gt;Then there is one program I use almost daily. For the first time I
used it, I found out the version in D was quite old comparing to
upstream version. I sent an email to ask the package maintainer if I
can help upgrade the package to the latest version. But it turned out
the package maintainer was aware of that but he wouldn't want to
upgrade to the latest version because he and the upstream maintainer
held different ideas of how things should be done.&lt;/p&gt;
&lt;p&gt;Over the course of 6 years, things didn't get improved. I wasn't
alone. Many people offered helping hands, but all the effort was
blocked due the the same reason. And to be honest, to this day nobody
really understands what is the real reason that blocks this whole
thing -- it dates back to 16 years ago according to my own
archaeology, and there isn't any public record. The only information
people get is that they had discussions and several proposals many
years ago.&lt;/p&gt;
&lt;p&gt;The higher level reason is that it "doesn't meets the normal distro
expectations and standards". In order to not make myself a fool and
take the wrong side, I check how things are done in other popular
distributions like G, A and F. It seems that they do have the relative
new version and aren't concerned with the blocker mentioned in D's
package.&lt;/p&gt;
&lt;p&gt;At this point I feel frustrated and pissed. On one hand I respect the
package maintainer because he obviously put huge amount of effort into
this package - he went as far as writing a huge patch to did things
the way he saw fit and maintained that patch for years; on the other
hand it looks like he is holding hostage of everybody using D to make
his proposal accepted upstream.&lt;/p&gt;
&lt;p&gt;Politics is inevitable in life. But I don't want to see a
volunteer-based open source project turned into an arena for people
who push for their private agendas while actively harming the interest
of wider community.&lt;/p&gt;
&lt;p&gt;I would either package my own version or write to D mailing list to
take over the project. As of today I've finished a preliminary version
of the new package, with all the cruft removed. I also filed a new bug
report to urge the package maintainer to reconsider upgrading to the
latest upstream version.  I don't like to aggressively take over
things, but for the benefit of larger community, I will do what needs
to be done.&lt;/p&gt;</summary></entry><entry><title>Dabbling in Data Structures and Algorithms Once Again</title><link href="http://blog.liuw.name/dabbling-in-data-structures-and-algorithms-once-again.html" rel="alternate"></link><updated>2016-02-27T01:11:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2016-02-27:dabbling-in-data-structures-and-algorithms-once-again.html</id><summary type="html">&lt;p&gt;Strange it may seem, I don't think I ever dealt with coding interviews
well. Not that I've never been to one, it is just that I didn't realy
get my job offers by solving puzzles and writing linked list, tree or
graph algorithms.&lt;/p&gt;
&lt;p&gt;When I was in school, I dealt with low level stuff. As system
administrator I mostly wrote scripts. I just needed to understand how
a system worked. I worked on various kernels, but most data structures
and algorithms weren't rocket science there. I studied algorithms
using some of the prestigious books in the field. But I never used
them in real life. I thought data structures and algorithms were fun
and boring at the same time. It was fun because it was like solving
puzzles, boring because I had no use of it. In the end I didn't spend
much time on that subject.&lt;/p&gt;
&lt;p&gt;Then came the job hunting season. It's quite pervasive to ask
algorithm related questions in interviews. I think I did badly in most
of them. But I used my other skills to get some job offers. I
considered myself lucky.&lt;/p&gt;
&lt;p&gt;Nowadays I ponder from time to time what it would be like to dabble in
data structures and algorithms again -- what if I want to change job
at some point? Better keep myself sharp and be ready all the time.  So
I registered an account on one of the online judge services and picked
an easy question.&lt;/p&gt;
&lt;p&gt;The first thing I had to do was to convince myself to leave all the
error handling logic alone. I stopped asking questions like "what if
the memory allocation fails" and "how can I sanitise the input" and
blundered on.&lt;/p&gt;
&lt;p&gt;The second thing that baffled me was the environment. I was presented
with a web based editor. My muscle memory worked against me. Every
time I tried to use Emacs keybindings the editor did something I
didn't expect. My thought was constantly interrupted. I guess I could
have used my own development environment to make things easier.&lt;/p&gt;
&lt;p&gt;Then I sadly discovered that I basically forgot all the relevant bits
on the subject. Due to time constraint, I tried to invent a caching
algorithm for the problem, but only to find it harder and harder to
debug.&lt;/p&gt;
&lt;p&gt;At that point I was quite frustrated. The problem was marked as
"easy". I was either too stupid to even solve an easy problem or
missed something very obvious.&lt;/p&gt;
&lt;p&gt;It turned out I did miss something. There was an O(n) algorithm for
the problem with only a few lines of code. I blinded myself with my
horribly obscured algorithm -- though it was quite close to the
correct one. I had the "aha" moment when I looked at how other people
solved it and wondered why I missed that.&lt;/p&gt;
&lt;p&gt;So my first coming back to the subject was not working well. That is
more or less expected. People get rusty over time. And in my defense I
am not used to interview style coding at all. The next step is to pick
up books and tune myself to get used to the restricted
environment. Hopefully I can reacquaint myself with this subject and
make it useful at some point.&lt;/p&gt;</summary></entry><entry><title>The Internet of Useless Opinions</title><link href="http://blog.liuw.name/the-internet-of-useless-opinions.html" rel="alternate"></link><updated>2016-02-17T00:24:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2016-02-17:the-internet-of-useless-opinions.html</id><summary type="html">&lt;p&gt;Hacker News is one of the few sites I go to daily because I find
majority of the submissions are of high quality. I seldom comment for
various reasons (maybe I should expound that in another post), but I
do enjoy reading interesting and insightful comments about how things
work, less-well-known history and intellectual debates.&lt;/p&gt;
&lt;p&gt;As with all other Internet forums, there are trolls, fanboys, fanatics
and so on, so I see all sort of opinions. Strangely I never seem to
have problems with opinions even if they seem most estranged,
irrational, absurd or irritating. Those are, after all, opinions. And
in my own humble opinion, the value of opinions from some random
stranger on the Internet is close to zero. And yes, you SHOULD stop
reading now if you don't know me.&lt;/p&gt;
&lt;p&gt;I seem a bit cynical, but in fact I'm pragmatic. Anyone who wants to
steer the world to his or her own direction should be busy doing
things to make that actually happen. Being vocal on the Internet
without actually doing anything is cheap.&lt;/p&gt;
&lt;p&gt;I don't judge people from what they say on the Internet, of
course. But sometimes when I read opinion like "We should do X because
of Y", I do wonder if that person has ever done serious work in the
field. To avoid having a straw man argument, we'd better have a look
at concrete example.&lt;/p&gt;
&lt;p&gt;Whenever a security bug related to memory safety shows up in system
software written in C, there are people who claim "we should expunge
all C code and rewrite everything in memory safe language because C is
unsafe". Technically speaking I agree with them wholeheartedly.  I'm
not being sarcastic here -- I try to use the right language for the
right work in my day job, I've learned more than a dozen of languages
over the years. C is terrible language, we do need better system level
language(s). But basing argument for replacing C just on the language
itself misses the whole picture. C has paramount tooling support, it
has the right level of abstraction to work with a machine, the list
goes on and on and on. Throwing away decades of effort is just
unrealistic. Guess what, people who care have already rolled up their
sleeves and started publishing code. Not sure how much of the code is
written by the most vocal people on the Internet, though. And I
believe if those people who have done the real work are to make the
case, they would have used different argument than just "because C is
bad".&lt;/p&gt;
&lt;p&gt;My wisdom over the years is, people who care are too busy to express
opinions on the Internet; those who are very vocal tend to be doing
disservice to the things they try to promote. All in all, the Internet
is just teeming with useless opinions.&lt;/p&gt;
&lt;p&gt;And I admit this piece is my humble contribution to the pool of
useless opinions on the Internet. Anyone who takes my words seriously
is just wasting his or her time.&lt;/p&gt;</summary></entry><entry><title>On Opinions</title><link href="http://blog.liuw.name/on-opinions.html" rel="alternate"></link><updated>2016-02-06T13:23:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2016-02-06:on-opinions.html</id><summary type="html">&lt;p&gt;I am normally a laid-back person. I don't care about many things that
are not related to me. Heck, I don't even care about that many things
that are related to me. I say I have no opinion or no preference all
the time.&lt;/p&gt;
&lt;p&gt;By and large I'm still the same old me. I have grown somewhat
opinionated in certain aspects along the way, however. I don't know
what was the tipping point, what was the last straw to break the
camel's back. Those aren't the important in the grand scheme of
things. What is important is that I realise there is no such thing as
no opinion, there is only good opinion and bad opinion.&lt;/p&gt;
&lt;p&gt;More often than not, when I take on more responsibilities either in
life or in work, I have to form a way of thinking, which leads to
opinions on how things should work. This is not really philosophy of
life. I refuse to use that word that because the level of discussion
in this post doesn't qualify.&lt;/p&gt;
&lt;p&gt;The reason I have become somewhat opinionated lies in the fact that I
have had a lot more interactions with humans that with conflicting
opinions in the past two years at work. Not that I shunned away from
interaction with real humans, but my line of work consisted mostly of
interactions with machines (which could be considered both a bless and
a curse).&lt;/p&gt;
&lt;p&gt;Inevitably, when talking to different people with different opinions,
I form mine. I need to either agree or disagree with them. I can do
neither without my own opinion.&lt;/p&gt;
&lt;p&gt;This is both good and bad. It's good because I have gotten to the
point where I can have consistent view of the big picture and actually
push things forward. It's bad because that blinds me, shutting down a
whole lot of new possibilities.&lt;/p&gt;
&lt;p&gt;And to be honest I become wary of being too entrenched in a position
as I become more and more opinionated. As said, there is only good or
bad opinion. Entrenched myself in a wrong position caused by bad
opinion won't end well. But there is no way to tell accurately which
one is good or which one is bad. In principle I think everybody agrees
a well-thought opinion is better than one that comes up random, so in
reality I try hard to form well-thought opinion. I think that is the
best one can do.&lt;/p&gt;</summary></entry><entry><title>Prepare Myself for "Stupid" Questions</title><link href="http://blog.liuw.name/prepare-myself-for-stupid-questions.html" rel="alternate"></link><updated>2016-01-30T23:40:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2016-01-30:prepare-myself-for-stupid-questions.html</id><summary type="html">&lt;p&gt;We had a booth at one open source conference with a wide ranges of
open source software users. It is good to talk to end users from time
to time, because when you're isolated for too long from end users you
don't know how they perceive the project.&lt;/p&gt;
&lt;p&gt;We got all sorts of questions. I considered some high quality and some
"stupid". In the end, all questions need to be answered, otherwise we
look stupid ourselves.&lt;/p&gt;
&lt;p&gt;By "stupid questions", I mean the questions that are so wrong that
you don't even know where to start. But the user actually thinks the
question is legit. I think we normally handle high quality questions
very well because both sides know what they are doing. It's the
"stupid" questions that we handle badly from time to time.&lt;/p&gt;
&lt;p&gt;It's not very good tactic to try to educate the user from ground up
and try to rectify their understanding, because we don't have that
much time and the user is not here to receive a lecture. Another
aspect is that by rectifying all the errors you actually make the
other side feel stupid while originally he or she might actually be
feeling good and wishing to engage.&lt;/p&gt;
&lt;p&gt;The best way I can think of thus far is to use analogies. For example,
one user asks, "can product A generate an intermediate medium that can be
consumed be product B because the underlying technology is the same?"
The analogy would be "no, it can't because it would be requiring BSD
binary to run on Linux. The underlying format is ELF on both platforms
but there are things that just don't allow to do that." Use things
user can relate to to make them quickly grasp the idea.&lt;/p&gt;
&lt;p&gt;It does take some effort to improvise analogies on the spot,
though, but as least I have a way to deal with those questions now.&lt;/p&gt;</summary></entry><entry><title>One Post per Week</title><link href="http://blog.liuw.name/one-post-per-week.html" rel="alternate"></link><updated>2016-01-16T22:28:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2016-01-16:one-post-per-week.html</id><summary type="html">&lt;p&gt;I'm now setting a new resolution: I plan to write one blog post per
week.&lt;/p&gt;
&lt;p&gt;I was sitting at the desktop watching random videos on the Internet
this morning, then all of a sudden I felt hollow. I realized I would
have wasted quite a lot of time just watching random videos on the
Internet. Life is too short to do things like that.&lt;/p&gt;
&lt;p&gt;As a matter of fact, I do have a lot of things that I want to write
about. I accumulate topics quite fast because I read articles and
books daily, so I don't think I will run out of ideas to rant about.&lt;/p&gt;
&lt;p&gt;I have accumulated several drafts in my home directory but never got
the motive to finish them. They sort of sit there rotting away until I
eventually don't have the appetite to look at them anymore and delete
them. This is quite bad.&lt;/p&gt;
&lt;p&gt;The rule is simple: topic and length don't matter, just write one
post a week. Rhetoric can be bad, grammar errors are allowed -- heck,
I'm not aiming to become a professional writer or anything.&lt;/p&gt;
&lt;p&gt;Let's see how it goes.&lt;/p&gt;</summary></entry><entry><title>On Interaction with Open Source Communities</title><link href="http://blog.liuw.name/on-interaction-with-open-source-communities.html" rel="alternate"></link><updated>2015-11-26T23:23:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2015-11-26:on-interaction-with-open-source-communities.html</id><summary type="html">&lt;p&gt;During our regular meeting my colleague said he learned a lot during a
trip to one of our vendors, much more than he had expected. One of the
many eye opening learnings is that it is actually quite intimidating
to interact with open source communities.&lt;/p&gt;
&lt;p&gt;It is true that it is not an easy task to work in the public. Sending
emails to a public mailing list is just like public speaking. Even if
I know whatever I say is not going to be used against me in any way, I
have the mental burden that if I make stupid mistakes it's going to be
on public record forever.&lt;/p&gt;
&lt;p&gt;I'm lucky to have time to grow extra thick skin over a long period of
time. I started with small changes and gradually took on larger part
of the project. I also learned how to effectively to not take
criticisms personal and how to focus on the work itself.&lt;/p&gt;
&lt;p&gt;Others might not be so lucky. Imagine I'm hired by some vendor and
assigned to contribute a big feature as my first take on the
project. Surely there will be mistakes and will be picked up by
maintainers and reviewers. If the maintainers are terse and straight,
it's natural that I feel hostility towards me. The more interations I
have, the more frustrated I feel. Eventually I just give up and move
on to other things.&lt;/p&gt;
&lt;p&gt;It's a pity that the openess of a project actually works against
itself. No matter how nice one wants to be, there will be embarassing
moments.&lt;/p&gt;
&lt;p&gt;There is no easy solution. The negative emotional effect is hard to
avoid. Some take it well, others don't. It takes time to educate
people. It takes time for people to change mentality. I am not too
optimistic on this issue getting sovlved any time soon.&lt;/p&gt;</summary></entry><entry><title>Securing My Pet VMs</title><link href="http://blog.liuw.name/securing-my-pet-vms.html" rel="alternate"></link><updated>2015-11-23T23:49:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2015-11-23:securing-my-pet-vms.html</id><summary type="html">&lt;p&gt;I have a number of (0 to 3, depending on conditions) pet VMs running
somewhere in the "cloud".&lt;/p&gt;
&lt;p&gt;I don't want to become a 24x7 system administrator myself. I have far
more important things to do in my day to day life. On the other hand,
I have valuable data out there in those VMs, my secured communication
sometimes depends on them, so I do have incentive to make them as
secured as possible. Internet is a very dangerous place after all.&lt;/p&gt;
&lt;p&gt;Putting myself in the shoe of a malicious actor, I won't have the mood
to penetrate a random server on the Internet with my own human time if
that target is not highly valuable. The attackers are likely to use
some well-known exploits to mass-scan to maximise gain over a set
period of time. With that in mind, most if not all attacks I'm facing
are from script-kiddies. Securing my VMs from attackers on the
Internet is simple -- I just need to follow every security
announcement channel of the software I use (from operating system to
applications) and at the same time apply security best practices. That
should save my arse under most situations.&lt;/p&gt;
&lt;p&gt;An attack vector in the cloud era is the "cloud" itself. There will
always be security bugs in hypervisors. It's better to just assume the
underlying platform unsecured. This imposes quite a challenge. One can
easily turn into fully paranoid mode considering what the underlying
platform is able to do to his or her VMs. There isn't really not much
I can do. But again, my basic assumption is that my data isn't too
valuable to an attackers, so off-the-shelf encryption is good enough
for me. In fact, I do full disk encryption in my VMs most of the time,
so that no-one can peek into my disk image when it's offline. I also
stay away from the pre-baked images from the providers, so that I'm
immune to mis-configuration in their scripts or bug in the image.&lt;/p&gt;
&lt;p&gt;I don't really consider having an IDS like Tripwire or AIDE running. It would
be relatively easy to observe abnormal traffic to determine if my box is
compromised. IDS doesn't provide much value in the threats &lt;em&gt;I&lt;/em&gt; face.
Furthermore, by the time IDS or any other mechanism discovers an intrusion has
happened the highest priority is to migrate all data to a safe place. Figuring
out what bugs lead to the intrusion is irrelevant in that context. It would be
nice though if there is tool that is integrated with Linux distribution.
FreeBSD has `freebsd-update IDS', which is convenient and useful to a degree. I
haven't found similar utility in the Linux distribution I use and it's not
likely to happen in the future because fundamentally Linux distribution is not
developed as an entity but built with a bunch of loosely coupled software.&lt;/p&gt;
&lt;p&gt;End of brain dump when I'm building a storage VM.&lt;/p&gt;</summary></entry><entry><title>Free Software is not Free</title><link href="http://blog.liuw.name/free-software-is-not-free.html" rel="alternate"></link><updated>2015-11-16T22:30:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2015-11-16:free-software-is-not-free.html</id><summary type="html">&lt;p&gt;There has been some back and forth discussion on how Xen's security process
sucks. Well, not quite. Though the email was titled that way, the content
didn't have much to do with security process per se. True, there are
technically correct points in that thread (with which I completely agree), but
the underlying theme is disturbing. That thread prompted me into thinking how
open source project functions. What I'm going to dwell on is not Xen project
specific.&lt;/p&gt;
&lt;p&gt;All in all, there are people that don't want to invest time and money into an
open source project but want undue influence. The cold hard fact is that things
just don't work that way. Making a piece of software requires a lot of work.
Whatever great idea floating around needs to be implemented by an actual person
-- that comes down to time and money.&lt;/p&gt;
&lt;p&gt;So while open source projects are often branded as "free" (as in either free
speech or free beer), the work behind them is not.  Open source world nowadays
function differently than 20 years ago. It has developed into a business model
that every major project has some vested interest of some companies. Their
employees act in the interest of the employers and prioritise work items
accordingly. There are hobbyists working on a project but it's hard for them to
make substantive contributions.&lt;/p&gt;
&lt;p&gt;People have expectation that, since open source project is "free", they are
entitled to add more work items even if they don't want to invest time and
money. This is fundamentally wrong. Well, they are "free" to voice their
opinions, but then developers are "free" to ignore part of or all of those
opinions. The door is always open for collaborations though -- everybody is
"free" to join.&lt;/p&gt;
&lt;p&gt;In a proprietary software world, there is normally no public channel to ask for
changes. But I'm pretty sure it all comes down to support contract or whatnot.
I can't imagine someone out of the blue goes to Microsoft and says "the way you
work is wrong, your priority is wrong, let me tell you what to do, but I don't
want to pay you anything".&lt;/p&gt;
&lt;p&gt;And I have to admit I sometimes feel upset for such attitude and entitlement.
The joy of working on open source project is ruined. Not respecting the effort
other people put into the project is just demotivating. And I'm not only
talking about myself or Xen project specifically. There have been several
instances of developer burnout. Many people also wrote essays on similar
subjects.&lt;/p&gt;
&lt;p&gt;In my humble opinion, free software projects are just not "free" as some people
would like them to be. Ultimately, a free software project is what the whole
community makes it.  If one disagrees on the direction of a project, he or she
should join and lead the change for the better.&lt;/p&gt;</summary></entry><entry><title>Of Course Joanna is Right</title><link href="http://blog.liuw.name/of-course-joanna-is-right.html" rel="alternate"></link><updated>2015-11-01T14:50:00+00:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2015-11-01:of-course-joanna-is-right.html</id><summary type="html">&lt;p&gt;There have been quite a lot of Xen-bashing for XSA-148. It's no doubt a cluster-fuck, a reflection of the sad state of the art of computer system security. &lt;/p&gt;
&lt;p&gt;As Ian pointed out in his blog post, we collectively choose features over security. Security only matters when there is a big fuck-up like HeartBleed, ShellShock or XSA-148.&lt;/p&gt;
&lt;p&gt;What is even sadder is the attitude of media in general. Journalists actively hunt for headline-worth bugs. With the help of slightly technically incorrect writing that skews the true situation and some other implications along the way, they have many masterpieces that conclude the dismal state of computer system security. Not that they're wrong about the conclusion, just in my opinion they completely miss the important points. Remember VENOM? I didn't mention it in my list of big fuck-ups because it really wasn't anything serious except for its cool name. But media picked on that and started a spree nonetheless, just because the cool name fit right in their headline.&lt;/p&gt;
&lt;p&gt;So what's wrong with the world? In short, we really really really don't care about security. The effort of a small group of people pales in front of the a world that cares more about cool new shiny things.&lt;/p&gt;
&lt;p&gt;In my world view, this is a ever changing world. Software is under constant pressure to evolve to adapt to external environment. No software is perfect. There were, are and going to be major bugs in all seriously written software. &lt;/p&gt;
&lt;p&gt;If one thinks a piece of software is secure just because there is no public security advisories list, then he or she is delusional. Good luck with building things on top of that piece of software without investing significant amount of money performing security audit. And if the media picks on a piece of software because there is such a list, they are actually doing a disservice to the wider community. That drives projects to sweep problems under the carpet.&lt;/p&gt;
&lt;p&gt;Coming back to XSA-148, there is no excuse on Xen project's part. That's a serious bug, period. What should be done next is to use the correct process to avoid such error again, and in similar situation, minimise the impact. Xen community constantly work on procedural improvements, learn from the past and make the future better. A constructive way of moving forward is for Xen community to engage with security researchers to improve the security of Xen. I look forward to that.&lt;/p&gt;</summary></entry><entry><title>On Toxicity on LKML</title><link href="http://blog.liuw.name/on-toxicity-on-lkml.html" rel="alternate"></link><updated>2015-10-18T23:50:00+01:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2015-10-18:on-toxicity-on-lkml.html</id><summary type="html">&lt;p&gt;Sarah Sharp quit, publicly.&lt;/p&gt;
&lt;p&gt;Just to be clear: I don't know her personally. The closest link she and I ever had was that I participated in Outreachy (formally known as Outreach Program for Women) as a mentor, where she had been one of the coordinators for some time.&lt;/p&gt;
&lt;p&gt;I do, however, have a lot of sympathy for her. And I would say I agree, to some degree, what she said in her blog post. The toxicity on LKML is appalling. Luckily I wasn’t on the receiving end of any of those, but even as a bystander I felt it was too much every time I saw crude rudeness. In short, LKML never ceased to amaze me on the level of rudeness.&lt;/p&gt;
&lt;p&gt;And it becomes increasingly clear to me that many LKML users (not necessarily Linux kernel developers) are seeing rudeness as necessity to ensure code quality. If you don’t believe me, just look at comment section under Sarah's story on LWN.net.&lt;/p&gt;
&lt;p&gt;I firmly believe that an open source community should be blunt to technical issues but respectful to people. I use that as my guideline to deal with people in my day to day work. As someone who has been making a living by contributing to a number of open source projects, I start to question whether it is worth putting more effort in Linux kernel development. But then I realise I’ve already been retreating from Linux kernel development long time ago. The decision was made subconsciously without me even noticing it. Of course I still work on it when I’m paid to do so, but other than that, I don’t think I will spend my spare time on it anymore.&lt;/p&gt;</summary></entry><entry><title>The CAPTCHA Economy</title><link href="http://blog.liuw.name/the-captcha-economy.html" rel="alternate"></link><updated>2014-05-17T10:50:00+01:00</updated><author><name>Wei Liu</name></author><id>tag:blog.liuw.name,2014-05-17:the-captcha-economy.html</id><summary type="html">&lt;p&gt;During daily lunch time chat yesterday in the office kitchen, my friend told me about a service he has been using for a while. And that provoked me to look further into this and discovered some interesting facts. Though not all of my questions about that service have been answered (either by him or my own investigation), I would still like to write down my thought so far.&lt;/p&gt;
&lt;p&gt;The service in question is a kind of service that use human power to recognise CAPTCHA images. As a client, you go to a website, register, top up some credit, then invoke their API to send images and get back results. Those CAPTCHA images are distributed to workers around the globe, then text result returned. There is a bidding system in place. If request volume is high then the price goes up, otherwise it goes down.&lt;/p&gt;
&lt;p&gt;My friend told me about one particular site he's using, but he also mentioned that there's tons of similar sites on the Internet. The service is charged at per request basis. The average cost for hiring someone behind a computer to recognise one image is about 1.5 cents. My friend told me that he paid $10 one year ago and he still had $7 credit when we had the conversation.&lt;/p&gt;
&lt;p&gt;I kind of think of this kind of service a clever hack to leverage machine power (to distribute and collect) and human power (to recognise patterns) to achieve certain goal. However, what's astonishing is that the average cost is so low that I don't even understand how this system manage to sustain itself. I mean, are those workers really get paid enough to feed themselves? &lt;/p&gt;
&lt;p&gt;I actually opened that site my friend is using when I got home. What's handy is that it shows various stats for its service. I can see, with the bidding system in place, the price for 1000 requests goes from $0.75 to $1.5. Most of the time the price stays around $1. That is, in my opinion, still too low. However I'm certainly wrong because this system seems to work fine. The site states it has been in business since 2007. Further down the site there is a pretty pie chart showing the distribution of workers worldwide. High on the top are Pakistan, India, Indonesia, Vietnam etc, which consist of more than 70% of all workers. China is also on the list with a number of ~3%. Interestingly USA is also on the pie chart, and it has more or less the same percentage of China. Russian and Ukrainian workers are also non-neglectable. The number of workers tops at 1000.&lt;/p&gt;
&lt;p&gt;My friend and I did some back-of-the-envelope calculation on the revenue of this service. Unfortunately I didn't take note about it so I'm here to do it again, from scratch. According to the material on the website, the average time to recognise an image is 15 seconds. But we decided to make it 10 seconds, given our own experience dealing with CAPTCHA images. So, for an average person like my friend and me, he can probably finish 6 requests per minute. That makes 360 requests per hour. Multiple that by 1000 (the maximum number of workers seen on the website from previous day's data), then divide that by 1000 (the average price for 1000 requests was $1). That yields the result of the maximum possible hourly revenue of that service, that is, $360/h. We had no idea the percentage that the service provider takes. If it is 10%, that makes it $60/h. I think that's probably enough to sustain the cost of maintenance, bandwidth etc, even enough to make small profit out of it.&lt;/p&gt;
&lt;p&gt;It might be profitable from service provider's point of view, but I still cannot see how feasible it is for a worker to make a living out of it. I also told another friend about this service and had a short discussion. Her idea is that probably the workers are not treating it as a full time job. But my point stands still, it's not profitable for a worker because you need a computer and Internet connection to do that job. The payback is not even likely to cover the expense, let alone make a profit / living out of it.&lt;/p&gt;
&lt;p&gt;I could be wrong, so I decided to go further. There's a line of text of much smaller font size saying "if you want to do data entry job, click here". I clicked that link, another website popped up. A remarkable line from the new website showed that the price can be as low as $0.35 per 1000 entries. I couldn't help asking myself how would anyone want to do this. Nonetheless I registered an worker account (with a newly registered email of course) and logged in.&lt;/p&gt;
&lt;p&gt;The interface is quite simple. The first page is "workspace", where you can look at the image you receive and enter text. For every image you receive there is a count down timer at the bottom, if you don't type at all during that time, the timer goes down. Presumably if the timer goes to zero the image is dispatched to other worker. But if you type anything, the timer is "refilled".&lt;/p&gt;
&lt;p&gt;I entered a few entries. Suddenly my work item was revoked and website told me that I entered one thing wrong -- well, I didn't pay much attention for sure. I was told that if I make 5 mistakes in a month my account will be banned. That's quite scary, given the amount of work you required to do to make so little (1000 entries for $1) and the mistakes you're allowed to make (5 per month). Apparently the dispatch queue was not so full because I idled for once or twice.&lt;/p&gt;
&lt;p&gt;I soon lost my interest in this game and turned to look at the navigation bar. I saw several tabs, among which was "payment". Also there's a "score board"-ish tab. I also given that account to my friend. She kind of found it interesting and looked at it as a game. However, I would doubt if anyone who wants to make money from it enjoys this as much as my friend did. When I got that account back, the system refreshed my payment. I could see that my friend and I entered 26 entries and made $0.013. Well, that's only $0.005 per entry!&lt;/p&gt;
&lt;p&gt;I had a look at the "score board". Top 1 worker made ~$180 last month, while number 100 made ~$42.&lt;/p&gt;
&lt;p&gt;After playing with the system and seeing the "score board", I had the impression that this is not an appealing job for me. I mean, even if someone is in desperate need of money, he or she should not consider doing this, because I don't see possible way to make any money out of it.&lt;/p&gt;
&lt;p&gt;Surely I don't know enough about other Asian countries, I don't really have an idea what their life standard is like. So probably for those countries high on the list, their workers can actually make profit from this job. As for USA workers, I have a theory that they might be homeless with laptop, and have access to free electricity and free wifi -- I've seen report on this lifestyle, they get free laptop from recycling station / donation and free electricity / wifi from McDonald. To be honest, the life standard of USA homeless is quite high compared to other countries, so that they can probably use this system to earn themselves a cup of coffee when they have nothing else to do. But I don't think those USA workers rely on this system to make a living by any means. For the developing countries, the device required to go into this job, the Internet connection and the electricity are not free (not saying that there's no free ride at all, just not as easy to get as in the US).&lt;/p&gt;
&lt;p&gt;Wearing my Chinese hat on, I can say more specific thing. Say I'm a guy from a very small town (by Chinese standard of course) and want to go into this job, I will first need a computer, which needs to be at the very least able to run an graphical desktop environment and a web browser. That will probably cost me 500 Yuan (~$80) if I buy a very very very old second hand computer. Then the Internet connection will probably cost me 30 Yuan (~$5) per month. Assume the power of my computer 200W, working 8 hours per day, unit price per watt 0.6 Yuan (~$0.1), that makes the electricity bill ~1 Yuan (~$0.16) per day. To cover the electricity bill alone, I will need to enter 160 entries. To cover the Internet fee I will need to enter 50000 entries. So, just to cover regular expenses, I will need to enter 5000 + 160 * 30 = 9800 entries (30 is the number of working days, and yes, I consider myself workaholic). To get back my investment on computer I will need to enter another 80000 entries. After all that, I get a job with hourly rate of 2.27 Yuan ($0.36), which is can barely feed myself given the current household level in my hometown. But of course, if I really have nothing else to do, this job is still something to get myself occupied -- any income is better than no income.&lt;/p&gt;
&lt;p&gt;In conclusion, I don't think as a worker it is worthy at all to do this job. However this kind of service exists, however small it is (the said service provider has 1000 workers top). I don't understand why. Probably there's poverty that's way beyond my understanding, probably workers never take on it as sole income source. I would put my bet on the latter.&lt;/p&gt;</summary></entry></feed>